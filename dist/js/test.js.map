{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/print-string/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","customElements","define","HTMLElement","[object Object]","super","template","document","getElementById","content","this","_shadowRoot","attachShadow","appendChild","cloneNode","$container","querySelector","stateLayout","getAttribute","stateOrder","textOutputCached","observedAttributes","oldVal","newVal","getValue","handleLayout","handleOrder","classList","toggle","textInputCurrent","formatString","reverseString","shuffleString","Error","render","str","replace","toUpperCase","split","reverse","join","a","length","j","Math","floor","random","tmp","oldValue","newValue","self","levenshteinDistance","forEach","operation","type","replaceBlock","dest","src","addBlock","delBlock","item","removeAll","simbol","index","color","intToRGB","hashCode","block","children","innerHTML","style","backgroundColor","div","createElement","className","insertBefore","removeChild","b","distanceMatrix","Array","fill","map","indicator","min","result","cr","cd","ca","filter","cc","push","hash","charCodeAt","toString","substring"],"mappings":"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","file":"./js/test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","class PrintString extends HTMLElement {\n  constructor() {\n    super();\n    const template = document.getElementById('print-string').content;\n    this._shadowRoot = this.attachShadow({ 'mode': 'open' });\n    this._shadowRoot.appendChild(template.cloneNode(true));\n\n    this.$container = this._shadowRoot.querySelector('.js-container');\n    this.stateLayout = this.getAttribute('layout');\n    this.stateOrder = this.getAttribute('order');\n    this.textOutputCached = '';\n  }\n\n  static get observedAttributes() {\n    return ['text', 'layout', 'order'];\n  }\n\n  attributeChangedCallback(name, oldVal, newVal) {\n    switch(name){\n      case 'text':\n        this.getValue(newVal);\n        break;\n      case 'layout':\n        this.handleLayout(newVal);\n        break;\n      case 'order':\n        this.handleOrder(newVal);\n        break;\n    }\n  }\n\n  handleLayout(newVal) {\n    if (newVal === this.stateLayout) {\n      return;\n    };\n    this.stateLayout = newVal;\n    this.$container.classList.toggle('column');\n  }\n\n  handleOrder(newVal) {\n    if (newVal === this.stateOrder) {\n      return;\n    }\n\n    this.stateOrder = newVal;\n    this.getValue(this.getAttribute('text'));\n  }\n\n  getValue(newVal) {\n    let textInputCurrent = this.formatString(newVal);\n\n    switch(this.stateOrder) {\n      case 'direct':\n        break;\n      case 'reverse':\n       textInputCurrent = this.reverseString(textInputCurrent);\n        break;\n      case 'random':\n        textInputCurrent = this.shuffleString(textInputCurrent);\n        break;\n      default:\n        throw new Error('Unrecognized state order');\n    }\n\n    this.render(this.textOutputCached, textInputCurrent);\n    this.textOutputCached = textInputCurrent;\n  }\n\n  formatString(str) {\n    return str.replace(/\\s/g, '').toUpperCase();\n  }\n\n  reverseString(str) {\n    return str.split('').reverse().join('');\n  }\n\n  shuffleString(str) {\n    let a = str.split(''),\n        n = a.length;\n\n    for(let i = n - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        let tmp = a[i];\n        a[i] = a[j];\n        a[j] = tmp;\n    }\n    return a.join('');\n  }\n\n  render(oldValue, newValue) {\n    const self = this;\n\n    if (oldValue === newValue) return;\n\n    // если удалено всё содержимое поля\n    if (newValue.length === 0) {\n      this.removeAll();\n      return;\n    }\n\n    // если вставлен текст в пустое поле\n    if (oldValue.length === 0 && newValue.length !== 0) {\n      newValue.split('').forEach(function(item, i) {\n        self.addBlock(item, i);\n      });\n      return;\n    }\n\n    // для всех остальных случаев находим и выполняем редакционное предписание по алгоритму Левенштейна\n    const diff = this.levenshteinDistance(newValue, oldValue);\n\n    diff.forEach(function(operation) {\n      switch(operation.type) {\n        case 'R':\n          self.replaceBlock(newValue[operation.dest - 1], operation.src - 1);\n          break;\n        case 'A':\n          self.addBlock(newValue[operation.dest - 1], operation.src);\n          break;\n        case 'D':\n          self.delBlock(operation.src - 1);\n          break;\n        default:\n          throw new Error('Diff Error');\n      };\n    });\n  }\n\n  replaceBlock(simbol, index) {\n    const color = this.intToRGB(this.hashCode(`${simbol}hashpadding`));\n    const block = this.$container.children[index];\n    block.innerHTML = simbol;\n    block.style.backgroundColor = `#${color}`;\n  }\n\n  addBlock(simbol, index) {\n    const color = this.intToRGB(this.hashCode(`${simbol}hashpadding`));\n    const div = document.createElement('div');\n    div.className = \"print-string__item\";\n    div.innerHTML = simbol;\n    div.style.backgroundColor = `#${color}`;\n\n    if (index === 0) {\n      this.$container.appendChild(div);\n    } else {\n      this.$container.insertBefore(div, this.$container.children[index]);\n    };\n  }\n\n  delBlock(index) {\n    this.$container.removeChild(this.$container.children[index]);\n  }\n\n  removeAll() {\n    this.$container.innerHTML = '';;\n  }\n\n  levenshteinDistance(a, b) {\n    const distanceMatrix = Array(b.length + 1).fill(null).map(() => Array(a.length + 1).fill(null));\n\n    for (let i = 0; i <= a.length; i += 1) {\n      distanceMatrix[0][i] = i;\n    }\n\n    for (let j = 0; j <= b.length; j += 1) {\n      distanceMatrix[j][0] = j;\n    }\n\n    for (let j = 1; j <= b.length; j += 1) {\n      for (let i = 1; i <= a.length; i += 1) {\n        const indicator = a[i - 1] === b[j - 1] ? 0 : 1;\n        distanceMatrix[j][i] = Math.min(\n          distanceMatrix[j][i - 1] + 1, // deletion\n          distanceMatrix[j - 1][i] + 1, // insertion\n          distanceMatrix[j - 1][i - 1] + indicator, // substitution\n        );\n      }\n    }\n\n    let result = [],\n        i = b.length,\n        j = a.length,\n        m = distanceMatrix;\n\n    do {\n      const cr = (i > 1 && j > 1) ? m[i-1][j-1] : -1;\n      const cd = (i > 1) ? m[i-1][j] : -1;\n      const ca = (j > 1) ? m[i][j-1] : -1;\n      const minRda = Math.min(...([cr, cd, ca].filter(cc => cc != -1)));\n\n      switch(minRda) {\n        case cr:\n          if (a[j-1] != b[i-1]) {\n            result.push({type: 'R', src: i, dest: j})\n          }\n          i -= 1;\n          j -= 1;\n          break;\n        case ca:\n          result.push({type: 'A', src: i, dest: j})\n          j -= 1;\n          break;\n        case cd:\n          result.push({type: 'D', src: i})\n          i -= 1;\n          break;\n        default:\n          throw new Error('MinRda Error');\n      }\n\n      if (i == 1 && j == 1 && a[j-1] != b[i-1]) {\n        result.push({type: 'R', src: i, dest: j});\n      }\n  } while (!(i == 1 && j == 1))\n    return result;\n  }\n\n  hashCode(str) {\n    let hash = 0;\n    for (let i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n  }\n\n  intToRGB(i){\n    const c = (i & 0x00FFFFFF).toString(16).toUpperCase();\n    return \"00000\".substring(0, 6 - c.length) + c;\n  }\n}\n\ncustomElements.define('print-string', PrintString);"],"sourceRoot":""}